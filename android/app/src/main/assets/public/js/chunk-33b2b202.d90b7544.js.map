{"version":3,"sources":["webpack:///./src/views/Reusables/ChangePasswordComponent.vue?5f64","webpack:///./src/views/Authenticated/Settings/ChangePassword.vue","webpack:///./src/views/Reusables/ChangePasswordComponent.vue","webpack:///./src/views/Reusables/ChangePasswordComponent.vue?f1b3","webpack:///./src/views/Reusables/ChangePasswordComponent.vue?a355","webpack:///./src/views/Authenticated/Settings/ChangePassword.vue?368d","webpack:///./src/views/Authenticated/Settings/ChangePassword.vue?a077"],"names":["slot","fullscreen","class","handleUpdatePassword","position","type","name","id","current","errors","password","autocomplete","confirm","changePasswordComponentSchema","credentials","required","label","min","oneOf","setup","value","store","user","state","users","components","IonItem","IonInput","IonLabel","render","__scopeId","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonBackButton","ChangePasswordComponent","IonButton","router","theForm","validationSchema","validate","resp","valid","values","dispatch"],"mappings":"yIAAA,W,0ECOmB,mB,iBAO+B,U,8XAbhD,eAeW,Q,wBAdT,iBAOa,CAPb,eAOa,Q,wBANX,iBAKc,CALd,eAKc,Q,wBAJZ,iBAEc,CAFd,eAEc,GAFDA,KAAK,SAAO,C,wBACvB,iBAAmC,CAAnC,eAAmC,O,MAErC,eAAsC,Q,wBAA3B,iBAAe,C,gCAG9B,eAEc,GAFAC,YAAY,EAAMC,MAAM,e,yBAClC,iBAA6B,CAA7B,eAA6B,O,MAEjC,eAEa,GAFDA,MAAM,gBAAc,C,wBAC5B,iBAA6D,CAA7D,eAA6D,GAAhD,QAAO,EAAAC,sBAAoB,C,wBAAE,iBAAM,C,qPCXnB,oB,GAG9BD,MAAM,S,iBAEwB,Y,iBAUA,oB,GAS9BA,MAAM,S,qKA1BX,eA2BM,YA1BJ,eAGW,Q,WAFT,iBAA2D,CAA3D,eAA2D,GAAhDE,SAAS,YAAU,C,WAAC,iBAAgB,C,YAC/C,eAAuF,GAA5EC,KAAK,WAAWC,KAAK,sBAAsBC,GAAG,U,WAAmB,EAAAC,Q,qDAAA,EAAAA,QAAO,K,iCAErF,eAAyD,IAAzD,EAAyD,eAArC,EAAAC,OAAM,2BAC1B,eASW,Q,WART,iBAAmD,CAAnD,eAAmD,GAAxCL,SAAS,YAAU,C,WAAC,iBAAQ,C,YACvC,eAME,G,WALS,EAAAM,S,qDAAA,EAAAA,SAAQ,IACjBL,KAAK,WACLC,KAAK,uBACLC,GAAG,WACHI,aAAa,gB,iCAGjB,eASW,Q,WART,iBAA2D,CAA3D,eAA2D,GAAhDP,SAAS,YAAU,C,WAAC,iBAAgB,C,YAC/C,eAME,G,WALS,EAAAQ,Q,qDAAA,EAAAA,QAAO,IAChBP,KAAK,WACLC,KAAK,sBACLC,GAAG,WACHI,aAAa,gB,iCAGjB,eAAwD,IAAxD,EAAwD,eAApC,EAAAF,OAAM,gC,YCfjBI,EAAgC,OACnC,CACNC,YAAa,OAAW,CACtBN,QAAS,SAENO,WAAWC,MAAM,WACpBN,SAAU,SACEM,MAAM,YACfD,WACAE,IAAI,GACPL,QAAS,SACNM,MAAM,CAAC,OAAQ,YAAa,MAAO,4BAGzCH,WAEY,iBAAgB,CAC7BT,KAAM,0BACNa,MAF6B,WAExB,MAEwB,eAAS,uBAArBX,EAFZ,EAEKY,MAFL,EAGyB,eAAS,wBAAtBV,EAHZ,EAGKU,MAHL,EAIwB,eAAS,uBAArBR,EAJZ,EAIKQ,MACFC,EAAQ,iBACRC,EAAO,gBAAS,kBAAMD,EAAME,MAAMC,MAAMF,QAI9C,OAHGA,EAAKF,QACNZ,EAAQY,MAAQE,EAAKF,MAAMZ,SAEtB,CACLC,OAAQ,iBACRD,UACAE,WACAE,YAGJa,WAAY,CACVC,QAAA,OACAC,SAAA,OACAC,SAAA,U,UC7CJ,EAAOC,OAAS,EAChB,EAAOC,UAAY,kBAEJ,QCWA,iBAAgB,CAC7BL,WAAY,CACVM,WAAA,OACAC,UAAA,OACAC,QAAA,OACAC,SAAA,OACAC,WAAA,OACAC,cAAA,OACAC,0BACAC,UAAA,QAEFnB,MAX6B,WAYzB,IAAMoB,EAAS,iBACTlB,EAAQ,iBACRmB,EAAU,eAAQ,CACxBC,iBAAkB5B,IAEpB,MAAO,CACH0B,SACApC,qBAAsB,WAAF,8CAAE,sHACHqC,EAAQE,WADL,UAChBC,EADgB,QAElBA,EAAKC,MAFa,uBAGZ9B,EAAgB0B,EAAQK,OAAxB/B,YAHY,SAIdO,EAAMyB,SAAS,uBAAf,kBAA2ChC,IAJ7B,2CAAF,qDAAE,OCnC9B,EAAOe,OAASA,EAED","file":"js/chunk-33b2b202.d90b7544.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ChangePasswordComponent.vue?vue&type=style&index=0&id=4ade17d1&lang=css&scoped=true\"","<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-back-button></ion-back-button>\n        </ion-buttons>\n        <ion-title>Update Password</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\" class=\"ion-padding\">\n        <change-password-component />\n    </ion-content>\n    <ion-footer class=\"about-footer\">\n        <ion-button @click=\"handleUpdatePassword\">UPDATE</ion-button>\n    </ion-footer>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonBackButton,\n  IonButton,\n} from \"@ionic/vue\";\nimport { useForm } from \"vee-validate\";\nimport { defineComponent } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport ChangePasswordComponent, {\n  changePasswordComponentSchema,\n} from \"../../Reusables/ChangePasswordComponent.vue\";\n\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonHeader,\n    IonPage,\n    IonTitle,\n    IonToolbar,\n    IonBackButton,\n    ChangePasswordComponent,\n    IonButton,\n  },\n  setup() {\n      const router = useRouter()\n      const store = useStore()\n      const theForm = useForm({\n      validationSchema: changePasswordComponentSchema,\n    });\n    return {\n        router,\n        handleUpdatePassword: async () => {\n        const resp = await theForm.validate();\n        if (resp.valid) {\n          const { credentials } = theForm.values;\n          await store.dispatch('users/updatePassword', {...credentials });\n        }\n      },\n    };\n  },\n});\n</script>\n","<template>\n  <div>\n    <ion-item>\n      <ion-label position=\"floating\">Current Password</ion-label>\n      <ion-input type=\"password\" name=\"credentials.current\" id=\"current\" v-model=\"current\" />\n    </ion-item>\n    <p class=\"error\">{{ errors[\"credentials.current\"]  }}</p>\n    <ion-item>\n      <ion-label position=\"floating\">Password</ion-label>\n      <ion-input\n        v-model=\"password\"\n        type=\"password\"\n        name=\"credentials.password\"\n        id=\"password\"\n        autocomplete=\"new-password\"\n      />\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\">Confirm Password</ion-label>\n      <ion-input\n        v-model=\"confirm\"\n        type=\"password\"\n        name=\"credentials.confirm\"\n        id=\"password\"\n        autocomplete=\"new-password\"\n      />\n    </ion-item>\n    <p class=\"error\">{{ errors[\"credentials.confirm\"] }}</p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonItem,\n  IonInput,\n  IonLabel\n} from \"@ionic/vue\";\nimport { computed, defineComponent } from \"vue\";\nimport * as yup from \"yup\";\n\nimport { useField, useFormErrors } from \"vee-validate\";\nimport { useStore } from \"vuex\";\n\nexport const changePasswordComponentSchema = yup\n  .object({\n    credentials: yup.object({\n      current: yup\n        .string()\n        .required().label(\"current\"),\n      password: yup\n        .string().label(\"Password\")\n        .required()\n        .min(8),\n      confirm: yup.string()\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\n    })\n  })\n  .required();\n\nexport default defineComponent({\n  name: \"ChangePasswordComponent\",\n  setup() {\n    // define fields to be used in this form context\n    const { value: current } = useField(\"credentials.current\");\n    const { value: password } = useField(\"credentials.password\");\n    const { value: confirm } = useField(\"credentials.confirm\");\n    const store = useStore()\n    const user = computed(() => store.state.users.user)\n    if(user.value) {\n      current.value = user.value.current\n    }\n    return {\n      errors: useFormErrors() as any,\n      current,\n      password,\n      confirm,\n    };\n  },\n  components: {\n    IonItem,\n    IonInput,\n    IonLabel\n  }\n});\n</script>\n\n<style lang=\"css\" scoped>\nion-item {\n  --padding-start: 0\n}\n</style>","\nimport {\n  IonItem,\n  IonInput,\n  IonLabel\n} from \"@ionic/vue\";\nimport { computed, defineComponent } from \"vue\";\nimport * as yup from \"yup\";\n\nimport { useField, useFormErrors } from \"vee-validate\";\nimport { useStore } from \"vuex\";\n\nexport const changePasswordComponentSchema = yup\n  .object({\n    credentials: yup.object({\n      current: yup\n        .string()\n        .required().label(\"current\"),\n      password: yup\n        .string().label(\"Password\")\n        .required()\n        .min(8),\n      confirm: yup.string()\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\n    })\n  })\n  .required();\n\nexport default defineComponent({\n  name: \"ChangePasswordComponent\",\n  setup() {\n    // define fields to be used in this form context\n    const { value: current } = useField(\"credentials.current\");\n    const { value: password } = useField(\"credentials.password\");\n    const { value: confirm } = useField(\"credentials.confirm\");\n    const store = useStore()\n    const user = computed(() => store.state.users.user)\n    if(user.value) {\n      current.value = user.value.current\n    }\n    return {\n      errors: useFormErrors() as any,\n      current,\n      password,\n      confirm,\n    };\n  },\n  components: {\n    IonItem,\n    IonInput,\n    IonLabel\n  }\n});\n","import { render } from \"./ChangePasswordComponent.vue?vue&type=template&id=4ade17d1&scoped=true\"\nimport script from \"./ChangePasswordComponent.vue?vue&type=script&lang=ts\"\nexport * from \"./ChangePasswordComponent.vue?vue&type=script&lang=ts\"\n\nimport \"./ChangePasswordComponent.vue?vue&type=style&index=0&id=4ade17d1&lang=css&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-4ade17d1\"\n\nexport default script","\nimport {\n  IonContent,\n  IonHeader,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  IonBackButton,\n  IonButton,\n} from \"@ionic/vue\";\nimport { useForm } from \"vee-validate\";\nimport { defineComponent } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport ChangePasswordComponent, {\n  changePasswordComponentSchema,\n} from \"../../Reusables/ChangePasswordComponent.vue\";\n\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonHeader,\n    IonPage,\n    IonTitle,\n    IonToolbar,\n    IonBackButton,\n    ChangePasswordComponent,\n    IonButton,\n  },\n  setup() {\n      const router = useRouter()\n      const store = useStore()\n      const theForm = useForm({\n      validationSchema: changePasswordComponentSchema,\n    });\n    return {\n        router,\n        handleUpdatePassword: async () => {\n        const resp = await theForm.validate();\n        if (resp.valid) {\n          const { credentials } = theForm.values;\n          await store.dispatch('users/updatePassword', {...credentials });\n        }\n      },\n    };\n  },\n});\n","import { render } from \"./ChangePassword.vue?vue&type=template&id=4ec8d99f\"\nimport script from \"./ChangePassword.vue?vue&type=script&lang=ts\"\nexport * from \"./ChangePassword.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}